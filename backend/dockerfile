ARG NODE_VERSION=current
ARG PNPM_VERSION=latest

# Stage 1: Build
FROM node:${NODE_VERSION}-alpine AS build
ARG PACKAGE_NAME
RUN npm install -g pnpm@${PNPM_VERSION}
WORKDIR /app
COPY --from=root . .
RUN pnpm i
RUN pnpm --filter $PACKAGE_NAME run build
RUN cd backend && pnpm run prisma:generate
RUN cp -r backend/src/prisma/ backend/build/prisma/

# Stage 2: Production
FROM node:${NODE_VERSION}-alpine
ARG PACKAGE_NAME
RUN npm install -g pnpm@${PNPM_VERSION}
WORKDIR /app

# GENERATED
COPY --from=build /app/pnpm-workspace.yaml ./
COPY --from=build /app/patches/ ./patches/
COPY --from=build /app/backend/build/ ./backend/build/
COPY --from=build /app/frontend/package.json ./frontend/package.json
COPY --from=build /app/package.json ./package.json
COPY --from=build /app/backend/package.json ./backend/package.json
COPY --from=build /app/libs/tailwind-config/package.json ./libs/tailwind-config/package.json
COPY --from=build /app/libs/components/package.json ./libs/components/package.json
#

RUN pnpm --filter $PACKAGE_NAME i --prod

WORKDIR /app/backend/build
CMD ["node", "index.js"]