ARG NODE_VERSION
ARG PNPM_VERSION

# Stage 1: Build
FROM node:${NODE_VERSION}-alpine AS build
ARG PACKAGE_NAME
RUN npm install -g pnpm@${PNPM_VERSION}
WORKDIR /app
COPY --from=root . .
RUN pnpm i
RUN pnpm --filter $PACKAGE_NAME run build

# Stage 2: Production
FROM node:${NODE_VERSION}-alpine
ARG PACKAGE_NAME
RUN npm install -g pnpm@${PNPM_VERSION}
WORKDIR /app

# GENERATED
COPY --from=build /app/pnpm-workspace.yaml ./
COPY --from=build /app/patches/ ./patches/
COPY --from=build /app/frontend/build/ ./frontend/build/
COPY --from=build /app/frontend/package.json ./frontend/package.json
COPY --from=build /app/package.json ./package.json
COPY --from=build /app/backend/package.json ./backend/package.json
COPY --from=build /app/libs/tailwind-config/package.json ./libs/tailwind-config/package.json
COPY --from=build /app/libs/components/package.json ./libs/components/package.json
#

COPY --from=build /app/frontend/next.config.ts ./frontend/
RUN pnpm --filter $PACKAGE_NAME i --prod

WORKDIR /app/frontend
CMD ["pnpm", "run", "start"]